[ { "title": "Wireguard a fast & lightweight VPN", "url": "/posts/wireguard/", "categories": "docker, compose", "tags": "vpn, security, managment", "date": "2022-09-24 11:00:00 +0200", "snippet": "WireGuard is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances.DepemdemciesFor everything to work out you will need to make sure that you have the following requirements: docker docker-composeIf this is the case, we can carry on creating the compose stack. It is recomended to clone the GitHub repo home-lab for the most up to date configuration of this service.Setting up wireguard network &amp; compose stackUse a predefined docker network if you would like to make other containers accessable throught the VPN tunnel. An example usecase would be a mgmt network, where you can access webinterfaces (e.g. Portainer), without exposing the mgmt interface to the web. This will increase your security, by decreases your attack surface from the web.If you just want WG server for your clients to connect to, you can skip this step. If you do want to add other containers to the WG server you will need to create a docker network called wireguard_network.sudo docker network create \\ --driver=bridge \\ --subnet=172.155.0.0/16 \\ --ip-range=172.155.5.0/24 \\ --gateway=172.155.5.254 \\ wireguard_networkCreate a directory for your docker-compose.yml file and copy the data below into that file. If you have chosen to make other containers accessible through the VPN tunnel, you will need to enable the networks variables!version: '3.9'# Enable external network when connecting other containers# ---# networks: # wg: # external: # name: wireguard_networkservices: wireguard: image: lscr.io/linuxserver/wireguard:latest container_name: wireguard restart: always cap_add: - NET_ADMIN - SYS_MODULE environment: - PUID=1000 - PGID=1000 - TZ=Europe/Berlin # Seting server in the client config. 'auto' uses the host # --- - SERVERURL=auto - SERVERPORT=51820 # Set WG configs for c2s # --- - PEERS=user1,user2,site1 # Set dns provider for clients. 'auto' uses the host # --- - PEERDNS=auto - INTERNAL_SUBNET=10.13.13.0 # Allowed IPs for clients. Calculator tool: https://bit.ly/3xOZP1b # --- - ALLOWEDIPS=0.0.0.0/0 # Creates QR-config-code # --- - LOG_CONFS=true volumes: - /opt/docker/volumes/wireguard/config:/config - /lib/modules:/lib/modules ports: - 51820:51820/udp sysctls: - net.ipv4.conf.all.src_valid_mark=1 # Enable external network when connecting other containers # --- # networks: # wg: # Enable when you want to set a custom container IP. Make sure IP matches your created network circles IP! # ipv4_address: 172.155.5.250Managing the compose stackThe following commands should be run in the same directory as the docker compose file.# Start the compose stack# ---sudo docker compose up -d# Stop the compose stack# ---sudo docker compose down# Rebuild / restart the compose stack# ---sudo docker compose up -d --force-recreate# View the compose stack logs# ---sudo docker compose logs portainerPrint QR code in CLIYou can use a script I have created to print the QR code, or run the following command with your relevant values for CONTAINER_NAME and PEER_NAME.# Add your relevant values for CONTAINER_NAME and PEER_NAME# ---sudo docker exec -it CONTAINER_NAME /app/show-peer PEER_NAMELinux clientIf you want to connect your linux client to your freshly created WG server, you will first of all need to install it. Run the installation command for your distro.Debian / Ubuntusudo apt install wireguard resolvconfFedorasudo dnf install wireguard-toolsArchsudo pacman -S wireguard-toolsSetup WG clientImport your WG peer config into the directory /etc/wireguard/. You can import your peer config by running the following command with your information.# Replace USERNAME, HOST, PEER_PATH and PEER_NAME with your information# ---scp USERNMAE@HOST:PEER_PATH/PEER_NAME.conf /etc/wireguardAfter you have successfully importet your peer config file, you can now use your WG client. Here are the following commands to manage your wireguard client.# Start the VPN tunnel# ---sudo wg-quick up PEER_NAME# Stop the VPN tunnel# ---sudo wg-quick down PEER_NAME# Inspect WG# ---sudo wgWindows, Mac, Android &amp; iOS clientsThe download link to your relevant system can be found here.To import your peer config on your phone just scan the QR code in the WG app. To import your peer config on your OS (Windows and Mac) open a terminal and run the following command with your values.# Replace USERNAME, HOST, PEER_PATH, PEER_NAME and CLIENT_DOWNLOAD_PATH# with your information# ---scp USERNMAE@HOST:PEER_PATH/PEER_NAME.conf CLIENT_DOWNLOAD_PATHLinks⚙️ If you see something that needs to be fixed, this documentation is open source! Feel free to open an issue here.⭐ If you enjoied the post I would appreciate a star on GitHub" }, { "title": "Watchtower watching for container updates", "url": "/posts/watchtower/", "categories": "docker, compose", "tags": "update, security", "date": "2022-08-08 14:00:00 +0200", "snippet": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.DepemdemciesFor everything to work out you will need to make sure that you have the following requirements: docker docker-composeIf this is the case, we can carry on creating the pi-hole service. It is recomended to clone the GitHub repo home-lab for the most up to date configuration of this service.Setting up portainer containerCreate a docker-compose.yml and copy the data below into it.version: '3.9'services: watchtower: image: containrrr/watchtower container_name: watchtower restart: unless-stopped volumes: - /var/run/docker.sock:/var/run/docker.sock - /etc/localtime:/etc/localtime:ro command: --schedule \"0 5 * * * *\" --rolling-restart --cleanup # --debug # Use for debuggingCommen argumentsHere are some other usefull arguments that can be used to manage the Watchtower instance. For more arguments visit the Watchtower website.SchedulingCron expression in 6 fields (rather than the traditional 5) which defines when and how often to check for new images. Either --interval or the schedule expression can be defined, but not both. An example: --schedule \"0 0 4 * * *\". Argument: --schedule, -sEnvironment Variable: WATCHTOWER_SCHEDULE Type: String Default: -Rolling restartRestart one image at time instead of stopping and starting all at once. Useful in conjunction with lifecycle hooks to implement zero-downtime deploy. Argument: --rolling-restartEnvironment Variable: WATCHTOWER_ROLLING_RESTART Type: Boolean Default: falseRevive stoppedStart any stopped containers that have had their image updated. This argument is only usable with the --include-stopped argument. Argument: --revive-stoppedEnvironment Variable: WATCHTOWER_REVIVE_STOPPED Type: Boolean Default: falseCleanupRemoves old images after updating. When this flag is specified, watchtower will remove the old image after restarting a container with a new image. Use this option to prevent the accumulation of orphaned images on your system as containers are updated. Argument: --cleanupEnvironment Variable: WATCHTOWER_CLEANUP Type: Boolean Default: falseFilter by enable labelUpdate containers that have a com.centurylinklabs.watchtower.enable label set to true. Argument: --label-enableEnvironment Variable: WATCHTOWER_LABEL_ENABLE Type: Boolean Default: falseWait until timeoutTimeout before the container is forcefully stopped. When set, this option will change the default (10s) wait time to the given value. An example: --stop-timeout 30s will set the timeout to 30 seconds. Argument: --stop-timeoutEnvironment Variable: WATCHTOWER_TIMEOUT Type: Duration Default: 10sFilter by disable labelDo not update containers that have com.centurylinklabs.watchtower.enable label set to false and no --label-enable argument is passed. Note that only one or the other (targeting by enable label) can be used at the same time to target containers.Wait until timeoutTimeout before the container is forcefully stopped. When set, this option will change the default (10s) wait time to the given value. An example: --stop-timeout 30s will set the timeout to 30 seconds. Argument: --stop-timeoutEnvironment Variable: WATCHTOWER_TIMEOUT Type: Duration Default: 10sManaging the compose stackThe following commands should be run in the same directory as the docker compose file.# Start the compose stack# ---sudo docker compose up -d# Stop the compose stack# ---sudo docker compose down# Rebuild / restart the compose stack# ---sudo docker compose up -d --force-recreate# View the compose stack logs# ---sudo docker compose logs portainerLinks⚙️ If you see something that needs to be fixed, this documentation is open source! Feel free to open an issue here.⭐ If you enjoied the post I would appreciate a star on GitHub" }, { "title": "KeeWeb an opensource password manager", "url": "/posts/keeweb-password-manager/", "categories": "application, password manager", "tags": "security, privacy, password", "date": "2022-08-07 14:00:00 +0200", "snippet": "In today’s days society everyone has more than a couple of online and offline accounts. Most people reuse or only slightly alter their passwords between each account. However, this is a serious security risk. If one password gets compromised, due to the provider not having adequate security measures, your other accounts are automatically at risk. This is only one example of how your login credentials could be compromised.KeeWeb is a free and open-source password manager compatible with KeePass, available as a web version and desktop apps, for Linux, Windows and Apple. Here you can store your passwords secure notes, like backup codes and files like private keys.Install KeeWebNavigate to the KeeWeb website and download your the desktop client and install it.Create a databaseStart your KeeWeb application and press the + New button to create your first password database.Initial database configurationBefore we can start adding anything we need to make a few adjustments to the database and the application. Don’t worry, we only need to do this one.Navigate to the lock symbol with the name New, in the bottom left corner of the window and click on it.Under the Settings title you will need to add your Master password for your password database and confirm it in the field Confirm Master password. Here you can also give your database a name via the Names field, found under the title Names. In my case I named it My Password Vault. It is recommended to use a password with at least 12 characters. It should include upper and lowercase letters, numbers as well as symbols. It can be a combination of several words / passwords.When scrolling a bit further down you can enable Backup this file. I recommend using the File option and selecting a external mount, like Google Drive, OneDrive, Dropbox and so on, by defining the Backup path: to point to that external mount.Google Drive example (using Google Drive desktop app): G:\\My Drive\\Backups\\Keeweb\\My Password Vault.{date}.bakHistory: History size, total MB per file: 32Advanced: Memory, KB: 512000 Paralleism: 4After we have made all these changes we can now save the password database for the first time by clicking the Save to ... button. I recommend saving to File first. You can always move / upload it to somewhere afterwards. Moving the .kdbx file while the KeeWeb is open is not recommended. Close / logout of the application first, then move the file to your desired location. After completion you can start / login to your password database by selecting the lock icon Open and selecting the .kdbx file in its new location.Initial application configurationLike mentioned above we still need to make some ajustments on the core application itself. These can be found under the General tab.Funktion: Automaticlly save and sync periodically: On every change Clear clipboard after copy: In a minute Minimize the app instead of close: TrueAudit: Check passwords using an online service Have I Been Pwned: True (Optional)Auto lock: If the app is inactive: In 30 minutes When the app is minimized: False On password copy: False On auto-type: False When the computer is locked or put to sleep: TrueKeeWeb usageAfter making these changes listed above, we can now finally start populating the database with content.To add new entries, Groups or Templates klick the + icon in the main menu and then on your desired option.Adding an entryAn entry is used to store your account information. Title - The title of your entry. For example, Steam Primary User - The username which is used to sign in to the service. In most cases this will be a username or mail address Website - The corresponding website to the service, in which you want to log in to. This is also a security feature against phishing attampts due to auto-type using the coresponding URL of this field. This only works if you do not use auto-type highlited entry Notes - Here you can store nodes, like MFA backup codes or other things Tags - Used for sorting purposes Expires - This will start marking the entry as expired on the set day. Entry will not be automatically deleted more... - This gives you the advanced field options files - You can add files, like private public keys, to your entry by clicking the paperclip icon on the bottom right hand siteCreating groupsGroups are used to sort your entries. Name - Is the name of the group. Enable searching entries in this group - If set to true you will see all entries that conform to your search criteria, when using the search bar Icon - Icon of the group Enable auto-type - Used to determine how KeeWeb types of passwords The main folder is the root directory of your password database. You can create your own structure with cascading groups. For example, My Password Vault &gt; Gaming &gt; Primary Accounts &gt; ...Using templatesTemplates make it easier to create entries. All templates can be found in the Templates group. Here you can clone the desired template to use in a live entry.ShortcutsShortcuts are used to automate some actions, so you do not have to manual click them. All shortcuts can be found under Settings &gt; Shortcuts The default most useful commands are: Creating an entry: alt + N Copy username: ctrl + B Copy passowrd: ctrl + C Copy website: ctrl + U Auto-type (KeeWeb highlited entry): ctrl + T Auto-type (KeeWeb in background): shift + alt + TLinks⚙️ If you see something that needs to be fixed, this documentation is open source! Feel free to open an issue here.⭐ If you enjoied the post I would appreciate a star on GitHub" }, { "title": "Windows 10 fresh install & setup", "url": "/posts/windows10-setup/", "categories": "os, windows", "tags": "install, setup", "date": "2022-07-16 18:00:00 +0200", "snippet": "The Windows 10 upgrade process drags old files, settings, and programs from your previous Windows system to your new one. Microsoft allows you to get an entirely fresh system by performing a clean install. This is particularly useful if you’ve purchased a new Windows 10 PC and it includes manufacturer-installed bloatware you don’t want. Or, you may need to perform a clean install on a computer without an existing Windows system after installing a new hard drive or you just want to start over because your system is getting a bit slow.DepemdemciesFor everything to work out you will need to make sure that you have the following requirements: USB-drive with atleast 8 GB of space Recomended to have Windows 10 Pro lizen …If this is the case, we can carry on creating a bootable Windows installation drive.Creat installation mediaDownload the Windows media creation tool from Microsoft. After completing the download run the MediaCreationToolXXXX.exe.1. Click on Accept2. Select Create installation media (USB flash drive, DVD or ISO file) for another PC and the click on Next3. The tool will by default select the host language. If you want to change this just deselect the Use the recommended options for this PC and select your prefered Language from the dropdown. Afterwards you can click on Next4. Leave the option USB flash drive selected and click on Next5. Select your USB flash drive, in my case it is the drive with the letter G and the name YOUR USB. Then click Next If you are unsure on what the right usb drive is, remove all other USB drives and press on the Refresh drive list text. Only external USB drives will be shown in the list NO internal drives6. Now we need to wait. This make several minutes, depending on your internet connection and the speed of your computer7. To finish up press the Finish button and then remove your USB driveInstalling WindowsTo boot from your USB drive turn on your computer and enter the boot menu by spamming one of the following keys ESC, F1, F8 ,F9, F10, F11, F12 or Delete If you are unsure on what the right button for the boot menu is, visit your motherboard vendors FAQ1. Select the USB drive from the boot menu and press the Enter key2. Click on Next to start3. Click on Install now4. Enter your Windows lizenz key and click on Next. If you do not own a lizenz goto point 4.24.2 If you do not have a lizenz at this time just click on I don't have a product key and select Windows 10 Pro6. Select Custom: Install Windows only (advanced)7. If you want to do a fresh install of an already setup system select and delete all partitions of the drive on which windows is installed (example Drive 2 Partion 3 and so on). If this is a fresh install for example on a new drive select that drive and click on Next8. Let the install run. This may take a couple of minutes9. The system will automaticly reboot after 10 secondsSetup of Windows1. Select your region, then confirme it with Yes2. Select your keyboard, then confirme it with Yes3. Click on Skip, even if you want other keyboard layouts. These can be added later4. Select Set up for personal use5. Do NOT use your Microsoft account. Use the Offline account button in the bottom left hand corner If you do not see that text disconect your internet and retriger the page by returning one step or rebooting your system.6. Click on Limited experience7. Enter your username8. Enter your password and confirm it afterwards It is recomended to have a password with atleast 12 characters. It should incloude upper and lowercase letters, numbers and symbols.9. Enter your security questions10. Always select the bottom option11. Press the Skip button12. Select Not nowInstalling driversText coming soon!Installing firmwareText coming soon!Removing junkRun the following commands in powershell as an administrator, if you want to make these changes to your system.Nav: Press the Windows key &gt; type powershell &gt; select Run as AdministratorAlways aktivated num lockSet-ItemProperty -Path 'HKCU:\\Control Panel\\Keyboard' -Name InitialKeyboardIndicators -Value '2'Set-ItemProperty -Path 'Registry::\\HKEY_USERS\\.DEFAULT\\Control Panel\\Keyboard' -Name InitialKeyboardIndicators -Value '2147483650'Deaktivation of CortanaNew-Item -Path 'HKLM:\\SOFTWARE\\Microsoft\\PolicyManager\\current\\device\\Experience' -Force | Out-NullNew-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\PolicyManager\\current\\device\\Experience' -Name AllowCortana -Value 0 -PropertyType DWORD -Force | Out-NullDeaktivation of OneDriveNew-Item -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\OneDrive' -Force | Out-NullNew-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\OneDrive' -Name DisableFileSyncNGSC -Value 1 -PropertyType DWORD -Force | Out-NullUninstall spam softwareGet-AppXProvisionedPackage -Online | ? { $_.DisplayName -like '*Xbox*'} | Remove-AppxProvisionedPackage -OnlineGet-AppXProvisionedPackage -Online | ? { $_.DisplayName -like '*Office*'} | Remove-AppxProvisionedPackage -OnlineGet-AppxProvisionedPackage -Online | ? { $_.DisplayName -like \"*windowscommunicationsapps*\"} | Remove-AppxProvisionedPackage -OnlineGet-AppXProvisionedPackage -Online | ? { $_.DisplayName -like '*Solitair*'} | Remove-AppxProvisionedPackage -OnlineGet-AppXProvisionedPackage -Online | ? { $_.DisplayName -like '*Skypeapp*'} | Remove-AppxProvisionedPackage -OnlineGet-AppXProvisionedPackage -Online | ? { $_.DisplayName -like 'Office'} | Remove-AppxProvisionedPackage -OnlineGet-AppXProvisionedPackage -Online | ? { $_.DisplayName -like '*Note*'} | Remove-AppxProvisionedPackage -OnlineGet-AppXProvisionedPackage -Online | ? { $_.DisplayName -like 'Tips'} | Remove-AppxProvisionedPackage -OnlineGet-AppXProvisionedPackage -Online | ? { $_.DisplayName -like 'Spotify'} | Remove-AppxProvisionedPackage -OnlineGet-AppXProvisionedPackage -Online | ? { $_.DisplayName -like '*Reality*'} | Remove-AppxProvisionedPackage -OnlineGet-AppxPackage *Xbox* -AllUsers | Remove-AppxPackageGet-AppxPackage *Office* -AllUsers | Remove-AppxPackageGet-AppxPackage *Solitair* -AllUsers | Remove-AppxPackageGet-AppxPackage *king.com* -AllUsers | Remove-AppxPackageGet-AppxPackage *skypeapp* -AllUsers | Remove-AppxPackageGet-AppxPackage *windowscommunicationsapps* -AllUsers | Remove-AppxPackageGet-AppxPackage *Office* -AllUsers | Remove-AppxPackageGet-AppxPackage *Note* -AllUsers | Remove-AppxPackageGet-AppxPackage *Tips* -AllUsers | Remove-AppxPackageGet-AppxPackage *Spotify* -AllUsers | Remove-AppxPackageGet-AppxPackage *Reality* -AllUsers | Remove-AppxPackageSetting defaultsTo create the best and clean expierence to new users on the system we need to edit the default user layouts under C:\\Users\\Default\\AppData\\Local\\Microsoft\\Windows\\Shell\\DefaultLayouts.xml. Copy the following code into the file and after that save it If you are the only user on the system you do not need to do this.&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;LayoutModificationTemplate xmlns=\"http://schemas.microsoft.com/Start/2014/LayoutModification\" xmlns:defaultlayout=\"http://schemas.microsoft.com/Start/2014/FullDefaultLayout\" xmlns:start=\"http://schemas.microsoft.com/Start/2014/StartLayout\" xmlns:taskbar=\"http://schemas.microsoft.com/Start/2014/TaskbarLayout\" Version=\"1\"&gt;\t&lt;LayoutOptions StartTileGroupCellWidth=\"6\" /&gt;\t&lt;DefaultLayoutOverride&gt;\t\t&lt;StartLayoutCollection&gt;\t\t\t&lt;defaultlayout:StartLayout GroupCellWidth=\"6\" /&gt;\t\t&lt;/StartLayoutCollection&gt;\t&lt;/DefaultLayoutOverride&gt;\t&lt;CustomTaskbarLayoutCollection&gt;\t\t&lt;defaultlayout:TaskbarLayout&gt;\t\t\t&lt;taskbar:TaskbarPinList&gt;\t\t\t&lt;/taskbar:TaskbarPinList&gt;\t\t&lt;/defaultlayout:TaskbarLayout&gt;\t&lt;/CustomTaskbarLayoutCollection&gt;&lt;/LayoutModificationTemplate&gt;Links⚙️ If you see something that needs to be fixed, this documentation is open source! Feel free to open an issue here.⭐ If you enjoied the post I would appreciate a star on GitHub" }, { "title": "Portainer your container manager", "url": "/posts/protainer/", "categories": "docker, compose", "tags": "managment, monitoring", "date": "2022-07-09 12:00:00 +0200", "snippet": "Portainer Community Edition is a lightweight service delivery platform for containerized applications that can be used to manage Docker, Swarm, Kubernetes and ACI environments. It is designed to be as simple to deploy as it is to use. The application allows you to manage all your orchestrator resources (containers, images, volumes, networks and more) through a ‘smart’ GUI and/or an extensive API.Portainer consists of a single container that can run on any cluster. It can be deployed as a Linux container or a Windows native container.DepemdemciesFor everything to work out you will need to make sure that you have the following requirements: docker docker-composeIf this is the case, we can carry on creating the compose stack. It is recomended to clone the GitHub repo home-lab for the most up to date configuration of this service.Setting up portainer containerCreate a docker-compose.yml and copy the data below into it.version: '3.9'volumes: data: {}services: portainer: image: portainer/portainer-ce:latest # Image for community edition # image: portainer/portainer-ee:latest # Image for enterprise container_name: portianer restart: unless-stopped volumes: - /etc/localtime:/etc/localtime:ro - /var/run/docker.sock:/var/run/docker.sock - data:/data ports: - 9443:9443/tcp - 8000:8000/tcp # environment: # - EDGE_INSECURE_POLL: 1 # Needed when using self signed cert with edge agentManaging the compose stackThe following commands should be run in the same directory as the docker compose file.# Start the compose stack# ---sudo docker compose up -d# Stop the compose stack# ---sudo docker compose down# Rebuild / restart the compose stack# ---sudo docker compose up -d --force-recreate# View the compose stack logs# ---sudo docker compose logs portainerPost-installAfter you have started Portainer visit the url https://&lt;host-ip-address&gt;:9443. Here you will need to setup your admin account for your Portainer instance. Just type in a username, password and optionally opt out of the annonymouse statistics collection. Try NOT to use a username, like root, admin or administrator, instead use a username such as aH2gme4. This will increase your resistance against brut force attacks. Also have a password with at least 12 characters. It should include upper and lowercase letters, numbers and symbols.After successfully login in to your Portainer instance you can click on Get Started to start creating containers and stacks on your host. If you want to link another Host with your Portainer instance you can click on Add Environments.Congratulations 🎉 you have successfully set up your Portainer instance.Edge agentFind out more about the use of the edge agent here.Links⚙️ If you see something that needs to be fixed, this documentation is open source! Feel free to open an issue here.⭐ If you enjoied the post I would appreciate a star on GitHub" }, { "title": "Pi-hole a blackhole for ads", "url": "/posts/pi-hole/", "categories": "docker, compose", "tags": "security, privacy, dns", "date": "2022-07-09 12:00:00 +0200", "snippet": "Pi-hole is a Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole and optionally a DHCP server, intended for use on a private network. It is designed for low-power embedded devices with network capability, such as the Raspberry Pi, but can be installed on any Linux machine as well as in Docker. Pi-hole has the ability to block traditional website advertisements as well as advertisements in unconventional places, such as smart TVs and mobile operating system advertisements.DepemdemciesFor everything to work out you will need to make sure that you have the following requirements: docker docker-composeIf this is the case, we can carry on creating the pi-hole service. It is recomended to clone the GitHub repo home-lab for the most up to date configuration of this service.Setting up pi-hole containerCreate a .env file and copy the data below into it. Make sure to change the CHANGE-ME values to your needed values:#.env for piholeHOST_IP=CHANGE-ME # IP of the hosts IP-address where the container is running on. For example 192.168.1.200WEB_PW=CHANGE-ME # The password for the web-ui of pi-holeCreate a docker-compose.yml in the same directory as the .env file and copy the data below into it.version: '3.9'volumes: data: {} dnsmasq: {}services: pihole: image: pihole/pihole:latest container_name: pihole restart: always ports: - ${HOST_IP}:53:53/tcp - ${HOST_IP}:53:53/udp - ${HOST_IP}:67:67/udp # Optional for DHCP - ${HOST_IP}:8080:80/tcp # Change variable to 127.0.0.1 if you want to use rev. proxy on the host dns: - 127.0.0.1 - 9.9.9.9 volumes: - data:/etc/pihole - dnsmasq:/etc/dnsmasq.d - /etc/localtime:/etc/localtime:ro cap_add: - NET_ADMIN environment: ServerIP: ${HOST_IP} TZ: 'Europe/Berlin' DNS1: 9.9.9.9 DNS2: 1.1.1.1 WEBPASSWORD: ${WEB_PW}Managing the compose stackThe following commands should be run in the same directory as the docker compose file.# Start the compose stack# ---sudo docker compose up -d# Stop the compose stack# ---sudo docker compose down# Rebuild / restart the compose stack# ---sudo docker compose up -d --force-recreate# View the compose stack logs# ---sudo docker compose logs portainerPost-installOnce the installer has been run, you will need to configure your router to have DHCP clients use Pi-hole as their DNS server which ensures that all devices connecting to your network will have content blocked without any further intervention.If your router does not support setting the DNS server, you can use Pi-hole’s built-in DHCP server; be sure to disable DHCP on your router first (if it has that feature available).As a last resort or for troubleshooting purpeses, you can manually set each device to use Pi-hole as their DNS server.Links⚙️ If you see something that needs to be fixed, this documentation is open source! Feel free to open an issue here.⭐ If you enjoied the post I would appreciate a star on GitHub" } ]
